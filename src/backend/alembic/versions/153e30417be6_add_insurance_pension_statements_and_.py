"""Add insurance pension statements and benefits

Revision ID: 153e30417be6
Revises: 79bb3d029563
Create Date: 2025-03-06 09:26:41.284381

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = '153e30417be6'
down_revision: Union[str, None] = '79bb3d029563'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Get existing enum types
    contributionfrequency = postgresql.ENUM('MONTHLY', 'QUARTERLY', 'SEMI_ANNUALLY', 'ANNUALLY', 'ONE_TIME', name='contributionfrequency', create_type=False)
    pensionstatus = postgresql.ENUM('ACTIVE', 'PAUSED', name='pensionstatus', create_type=False)
    
    op.create_table('pension_insurance_benefits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pension_insurance_id', sa.Integer(), nullable=False),
    sa.Column('source', sa.String(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('frequency', contributionfrequency, nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('valid_from', sa.Date(), nullable=False),
    sa.Column('valid_until', sa.Date(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['pension_insurance_id'], ['pension_insurance.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pension_insurance_benefits_id'), 'pension_insurance_benefits', ['id'], unique=False)
    op.create_table('pension_insurance_statements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pension_insurance_id', sa.Integer(), nullable=False),
    sa.Column('statement_date', sa.Date(), nullable=False),
    sa.Column('value', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('total_contributions', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('total_benefits', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('costs_amount', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('costs_percentage', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('note', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['pension_insurance_id'], ['pension_insurance.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pension_insurance_statements_id'), 'pension_insurance_statements', ['id'], unique=False)
    op.create_index(op.f('ix_pension_insurance_statements_statement_date'), 'pension_insurance_statements', ['statement_date'], unique=False)
    op.create_table('pension_insurance_projections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('statement_id', sa.Integer(), nullable=False),
    sa.Column('scenario_type', sa.String(), nullable=False),
    sa.Column('return_rate', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('value_at_retirement', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('monthly_payout', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['statement_id'], ['pension_insurance_statements.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pension_insurance_projections_id'), 'pension_insurance_projections', ['id'], unique=False)
    op.add_column('pension_insurance', sa.Column('retirement_date', sa.Date(), nullable=True))
    op.add_column('pension_insurance', sa.Column('status', pensionstatus, nullable=False, server_default='ACTIVE'))
    op.add_column('pension_insurance', sa.Column('policy_duration_years', sa.Integer(), nullable=True))
    op.add_column('pension_insurance', sa.Column('policy_end_date', sa.Date(), nullable=True))
    op.add_column('pension_insurance', sa.Column('is_lifetime_policy', sa.Boolean(), nullable=True))
    op.create_index('ix_pension_insurance_member_provider_name', 'pension_insurance', ['member_id', 'provider', 'name'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_pension_insurance_member_provider_name', table_name='pension_insurance')
    op.drop_column('pension_insurance', 'is_lifetime_policy')
    op.drop_column('pension_insurance', 'policy_end_date')
    op.drop_column('pension_insurance', 'policy_duration_years')
    op.drop_column('pension_insurance', 'status')
    op.drop_column('pension_insurance', 'retirement_date')
    op.drop_index(op.f('ix_pension_insurance_projections_id'), table_name='pension_insurance_projections')
    op.drop_table('pension_insurance_projections')
    op.drop_index(op.f('ix_pension_insurance_statements_statement_date'), table_name='pension_insurance_statements')
    op.drop_index(op.f('ix_pension_insurance_statements_id'), table_name='pension_insurance_statements')
    op.drop_table('pension_insurance_statements')
    op.drop_index(op.f('ix_pension_insurance_benefits_id'), table_name='pension_insurance_benefits')
    op.drop_table('pension_insurance_benefits')
    # ### end Alembic commands ###
