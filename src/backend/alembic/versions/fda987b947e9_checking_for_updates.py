"""Checking for updates

Revision ID: fda987b947e9
Revises: 55b3076b27fd
Create Date: 2025-02-17 22:38:32.245671

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = 'fda987b947e9'
down_revision: Union[str, None] = '55b3076b27fd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Create the enum type if it doesn't exist
    contributionfrequency = postgresql.ENUM('MONTHLY', 'QUARTERLY', 'SEMI_ANNUALLY', 'ANNUALLY', 'ONE_TIME', name='contributionfrequency')
    contributionfrequency.create(op.get_bind(), checkfirst=True)

    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_pension_company_employer', table_name='pension_company')
    op.drop_index('idx_pension_company_member', table_name='pension_company')
    op.create_index(op.f('ix_pension_company_employer'), 'pension_company', ['employer'], unique=False)
    op.create_index(op.f('ix_pension_company_id'), 'pension_company', ['id'], unique=False)
    op.create_index(op.f('ix_pension_company_member_id'), 'pension_company', ['member_id'], unique=False)
    op.drop_constraint('pension_company_member_id_fkey', 'pension_company', type_='foreignkey')
    op.create_foreign_key(None, 'pension_company', 'household_members', ['member_id'], ['id'], ondelete='CASCADE')
    op.create_index(op.f('ix_pension_company_contribution_history_id'), 'pension_company_contribution_history', ['id'], unique=False)
    op.create_index(op.f('ix_pension_company_contribution_plan_id'), 'pension_company_contribution_plan', ['id'], unique=False)
    
    # Convert frequency columns with USING clause
    op.execute('ALTER TABLE pension_company_contribution_plan_steps ALTER COLUMN frequency TYPE contributionfrequency USING frequency::contributionfrequency')
    op.create_index(op.f('ix_pension_company_contribution_plan_steps_id'), 'pension_company_contribution_plan_steps', ['id'], unique=False)
    
    op.drop_index('idx_pension_etf_etf', table_name='pension_etf')
    op.drop_index('idx_pension_etf_member', table_name='pension_etf')
    op.create_index(op.f('ix_pension_etf_etf_id'), 'pension_etf', ['etf_id'], unique=False)
    op.create_index(op.f('ix_pension_etf_id'), 'pension_etf', ['id'], unique=False)
    op.create_index(op.f('ix_pension_etf_member_id'), 'pension_etf', ['member_id'], unique=False)
    op.drop_constraint('pension_etf_member_id_fkey', 'pension_etf', type_='foreignkey')
    op.create_foreign_key(None, 'pension_etf', 'household_members', ['member_id'], ['id'], ondelete='CASCADE')
    op.create_index(op.f('ix_pension_etf_allocation_history_id'), 'pension_etf_allocation_history', ['id'], unique=False)
    op.create_index(op.f('ix_pension_etf_allocation_plan_id'), 'pension_etf_allocation_plan', ['id'], unique=False)
    op.create_index(op.f('ix_pension_etf_contribution_history_id'), 'pension_etf_contribution_history', ['id'], unique=False)
    op.create_index(op.f('ix_pension_etf_contribution_plan_id'), 'pension_etf_contribution_plan', ['id'], unique=False)
    
    op.execute('ALTER TABLE pension_etf_contribution_plan_steps ALTER COLUMN frequency TYPE contributionfrequency USING frequency::contributionfrequency')
    op.create_index(op.f('ix_pension_etf_contribution_plan_steps_id'), 'pension_etf_contribution_plan_steps', ['id'], unique=False)
    
    op.drop_index('idx_pension_insurance_member', table_name='pension_insurance')
    op.create_index(op.f('ix_pension_insurance_id'), 'pension_insurance', ['id'], unique=False)
    op.create_index(op.f('ix_pension_insurance_member_id'), 'pension_insurance', ['member_id'], unique=False)
    op.drop_constraint('pension_insurance_member_id_fkey', 'pension_insurance', type_='foreignkey')
    op.create_foreign_key(None, 'pension_insurance', 'household_members', ['member_id'], ['id'], ondelete='CASCADE')
    op.create_index(op.f('ix_pension_insurance_contribution_history_id'), 'pension_insurance_contribution_history', ['id'], unique=False)
    op.create_index(op.f('ix_pension_insurance_contribution_plan_id'), 'pension_insurance_contribution_plan', ['id'], unique=False)
    
    op.execute('ALTER TABLE pension_insurance_contribution_plan_steps ALTER COLUMN frequency TYPE contributionfrequency USING frequency::contributionfrequency')
    op.create_index(op.f('ix_pension_insurance_contribution_plan_steps_id'), 'pension_insurance_contribution_plan_steps', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_pension_insurance_contribution_plan_steps_id'), table_name='pension_insurance_contribution_plan_steps')
    op.execute('ALTER TABLE pension_insurance_contribution_plan_steps ALTER COLUMN frequency TYPE VARCHAR USING frequency::VARCHAR')
    op.drop_index(op.f('ix_pension_insurance_contribution_plan_id'), table_name='pension_insurance_contribution_plan')
    op.drop_index(op.f('ix_pension_insurance_contribution_history_id'), table_name='pension_insurance_contribution_history')
    op.drop_constraint(None, 'pension_insurance', type_='foreignkey')
    op.create_foreign_key('pension_insurance_member_id_fkey', 'pension_insurance', 'household_members', ['member_id'], ['id'])
    op.drop_index(op.f('ix_pension_insurance_member_id'), table_name='pension_insurance')
    op.drop_index(op.f('ix_pension_insurance_id'), table_name='pension_insurance')
    op.create_index('idx_pension_insurance_member', 'pension_insurance', ['member_id'], unique=False)
    
    op.drop_index(op.f('ix_pension_etf_contribution_plan_steps_id'), table_name='pension_etf_contribution_plan_steps')
    op.execute('ALTER TABLE pension_etf_contribution_plan_steps ALTER COLUMN frequency TYPE VARCHAR USING frequency::VARCHAR')
    op.drop_index(op.f('ix_pension_etf_contribution_plan_id'), table_name='pension_etf_contribution_plan')
    op.drop_index(op.f('ix_pension_etf_contribution_history_id'), table_name='pension_etf_contribution_history')
    op.drop_index(op.f('ix_pension_etf_allocation_plan_id'), table_name='pension_etf_allocation_plan')
    op.drop_index(op.f('ix_pension_etf_allocation_history_id'), table_name='pension_etf_allocation_history')
    op.drop_constraint(None, 'pension_etf', type_='foreignkey')
    op.create_foreign_key('pension_etf_member_id_fkey', 'pension_etf', 'household_members', ['member_id'], ['id'])
    op.drop_index(op.f('ix_pension_etf_member_id'), table_name='pension_etf')
    op.drop_index(op.f('ix_pension_etf_id'), table_name='pension_etf')
    op.drop_index(op.f('ix_pension_etf_etf_id'), table_name='pension_etf')
    op.create_index('idx_pension_etf_member', 'pension_etf', ['member_id'], unique=False)
    op.create_index('idx_pension_etf_etf', 'pension_etf', ['etf_id'], unique=False)
    
    op.drop_index(op.f('ix_pension_company_contribution_plan_steps_id'), table_name='pension_company_contribution_plan_steps')
    op.execute('ALTER TABLE pension_company_contribution_plan_steps ALTER COLUMN frequency TYPE VARCHAR USING frequency::VARCHAR')
    op.drop_index(op.f('ix_pension_company_contribution_plan_id'), table_name='pension_company_contribution_plan')
    op.drop_index(op.f('ix_pension_company_contribution_history_id'), table_name='pension_company_contribution_history')
    op.drop_constraint(None, 'pension_company', type_='foreignkey')
    op.create_foreign_key('pension_company_member_id_fkey', 'pension_company', 'household_members', ['member_id'], ['id'])
    op.drop_index(op.f('ix_pension_company_member_id'), table_name='pension_company')
    op.drop_index(op.f('ix_pension_company_id'), table_name='pension_company')
    op.drop_index(op.f('ix_pension_company_employer'), table_name='pension_company')
    op.create_index('idx_pension_company_member', 'pension_company', ['member_id'], unique=False)
    op.create_index('idx_pension_company_employer', 'pension_company', ['employer'], unique=False)

    # Drop the enum type
    contributionfrequency = postgresql.ENUM('MONTHLY', 'QUARTERLY', 'SEMI_ANNUALLY', 'ANNUALLY', 'ONE_TIME', name='contributionfrequency')
    contributionfrequency.drop(op.get_bind())
    # ### end Alembic commands ###
