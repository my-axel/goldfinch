"""initial schema

Revision ID: 24c86d154d2f
Revises: 
Create Date: 2025-03-18 20:01:54.413976

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '24c86d154d2f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('daily_update_tracking',
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('update_type', sa.String(length=50), nullable=False),
    sa.Column('attempted', sa.Boolean(), nullable=True),
    sa.Column('data_found', sa.Boolean(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('date', 'update_type')
    )
    op.create_table('etfs',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('isin', sa.String(), nullable=True),
    sa.Column('symbol', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('currency', sa.String(), nullable=True),
    sa.Column('asset_class', sa.String(), nullable=True),
    sa.Column('domicile', sa.String(), nullable=True),
    sa.Column('inception_date', sa.Date(), nullable=True),
    sa.Column('fund_size', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('ter', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('distribution_policy', sa.String(), nullable=True),
    sa.Column('last_price', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('last_update', sa.DateTime(), nullable=True),
    sa.Column('ytd_return', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('one_year_return', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('volatility_30d', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('sharpe_ratio', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_etfs_id'), 'etfs', ['id'], unique=False)
    op.create_index(op.f('ix_etfs_symbol'), 'etfs', ['symbol'], unique=False)
    op.create_table('exchange_rate_errors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source_currency', sa.String(), nullable=False),
    sa.Column('target_currency', sa.String(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('resolved', sa.Boolean(), nullable=False),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.Column('context', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('source_currency', 'target_currency', 'date', name='uix_exchange_rate_error')
    )
    op.create_table('exchange_rate_updates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('update_type', sa.String(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('currencies', sa.ARRAY(sa.String()), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('error', sa.String(), nullable=True),
    sa.Column('missing_dates', sa.ARRAY(sa.Date()), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_exchange_rate_updates_status_completed', 'exchange_rate_updates', ['status', 'completed_at'], unique=False)
    op.create_table('exchange_rates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('rate', sa.Numeric(precision=20, scale=6), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('date', 'currency', name='uix_date_currency')
    )
    op.create_index(op.f('ix_exchange_rates_id'), 'exchange_rates', ['id'], unique=False)
    op.create_table('household_members',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('birthday', sa.Date(), nullable=False),
    sa.Column('retirement_age_planned', sa.Integer(), nullable=False),
    sa.Column('retirement_age_possible', sa.Integer(), nullable=False),
    sa.Column('retirement_date_planned', sa.Date(), nullable=False),
    sa.Column('retirement_date_possible', sa.Date(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_household_members_id'), 'household_members', ['id'], unique=False)
    op.create_table('settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ui_locale', sa.String(), nullable=False),
    sa.Column('number_locale', sa.String(), nullable=False),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('projection_pessimistic_rate', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('projection_realistic_rate', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('projection_optimistic_rate', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('state_pension_pessimistic_rate', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('state_pension_realistic_rate', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('state_pension_optimistic_rate', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('inflation_rate', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_settings_id'), 'settings', ['id'], unique=False)
    op.create_table('task_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_type', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('resource_id', sa.Integer(), nullable=False),
    sa.Column('error', sa.String(), nullable=True),
    sa.Column('task_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_status_id'), 'task_status', ['id'], unique=False)
    op.create_table('etf_errors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('etf_id', sa.String(), nullable=False),
    sa.Column('error_type', sa.String(), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('resolved', sa.Boolean(), nullable=False),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.Column('context', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['etf_id'], ['etfs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('etf_id', 'error_type', 'date', name='uix_etf_error')
    )
    op.create_index('ix_etf_errors_resolved', 'etf_errors', ['resolved', 'resolved_at'], unique=False)
    op.create_table('etf_prices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('etf_id', sa.String(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('price', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('volume', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('high', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('low', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('open', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('dividends', sa.Numeric(precision=20, scale=6), nullable=True),
    sa.Column('stock_splits', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('capital_gains', sa.Numeric(precision=20, scale=6), nullable=True),
    sa.Column('original_currency', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['etf_id'], ['etfs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('etf_id', 'date', name='uix_etf_price_date')
    )
    op.create_table('etf_updates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('etf_id', sa.String(), nullable=False),
    sa.Column('update_type', sa.String(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('error', sa.String(), nullable=True),
    sa.Column('missing_dates', sa.ARRAY(sa.Date()), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('notes', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['etf_id'], ['etfs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_etf_updates_etf_id_date', 'etf_updates', ['etf_id', 'start_date', 'end_date'], unique=False)
    op.create_index('ix_etf_updates_status_completed', 'etf_updates', ['status', 'completed_at'], unique=False)
    op.create_table('pension_company',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('current_value', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('employer', sa.String(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('contribution_amount', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('contribution_frequency', sa.Enum('MONTHLY', 'QUARTERLY', 'SEMI_ANNUALLY', 'ANNUALLY', 'ONE_TIME', name='contributionfrequency'), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'PAUSED', name='pensionstatus'), nullable=False),
    sa.Column('paused_at', sa.Date(), nullable=True),
    sa.Column('resume_at', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['member_id'], ['household_members.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pension_company_employer'), 'pension_company', ['employer'], unique=False)
    op.create_index(op.f('ix_pension_company_id'), 'pension_company', ['id'], unique=False)
    op.create_index(op.f('ix_pension_company_member_id'), 'pension_company', ['member_id'], unique=False)
    op.create_table('pension_etf',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('current_value', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('etf_id', sa.String(), nullable=False),
    sa.Column('total_units', sa.Numeric(precision=20, scale=6), nullable=False),
    sa.Column('existing_units', sa.Numeric(precision=20, scale=6), nullable=True),
    sa.Column('reference_date', sa.Date(), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'PAUSED', name='pensionstatus'), nullable=False),
    sa.Column('paused_at', sa.Date(), nullable=True),
    sa.Column('resume_at', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['etf_id'], ['etfs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['member_id'], ['household_members.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pension_etf_etf_id'), 'pension_etf', ['etf_id'], unique=False)
    op.create_index(op.f('ix_pension_etf_id'), 'pension_etf', ['id'], unique=False)
    op.create_index(op.f('ix_pension_etf_member_id'), 'pension_etf', ['member_id'], unique=False)
    op.create_table('pension_insurance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('current_value', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('provider', sa.String(), nullable=False),
    sa.Column('contract_number', sa.String(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('guaranteed_interest', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('expected_return', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'PAUSED', name='pensionstatus'), nullable=False),
    sa.Column('policy_duration_years', sa.Integer(), nullable=True),
    sa.Column('policy_end_date', sa.Date(), nullable=True),
    sa.Column('is_lifetime_policy', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['member_id'], ['household_members.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pension_insurance_id'), 'pension_insurance', ['id'], unique=False)
    op.create_index(op.f('ix_pension_insurance_member_id'), 'pension_insurance', ['member_id'], unique=False)
    op.create_index('ix_pension_insurance_member_provider_name', 'pension_insurance', ['member_id', 'provider', 'name'], unique=True)
    op.create_table('pension_state',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'PAUSED', name='pensionstatus'), nullable=False),
    sa.ForeignKeyConstraint(['member_id'], ['household_members.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pension_state_id'), 'pension_state', ['id'], unique=False)
    op.create_index(op.f('ix_pension_state_member_id'), 'pension_state', ['member_id'], unique=False)
    op.create_index('ix_pension_state_member_name', 'pension_state', ['member_id', 'name'], unique=True)
    op.create_table('pension_company_contribution_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pension_company_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('is_manual', sa.Boolean(), nullable=False),
    sa.Column('note', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['pension_company_id'], ['pension_company.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pension_company_contribution_history_id'), 'pension_company_contribution_history', ['id'], unique=False)
    op.create_table('pension_company_contribution_plan_steps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pension_company_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('frequency', sa.Enum('MONTHLY', 'QUARTERLY', 'SEMI_ANNUALLY', 'ANNUALLY', 'ONE_TIME', name='contributionfrequency'), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('note', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['pension_company_id'], ['pension_company.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pension_company_contribution_plan_steps_id'), 'pension_company_contribution_plan_steps', ['id'], unique=False)
    op.create_table('pension_company_statements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pension_id', sa.Integer(), nullable=False),
    sa.Column('statement_date', sa.Date(), nullable=False),
    sa.Column('value', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['pension_id'], ['pension_company.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pension_company_statements_id'), 'pension_company_statements', ['id'], unique=False)
    op.create_table('pension_etf_contribution_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pension_etf_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('is_manual', sa.Boolean(), nullable=False),
    sa.Column('note', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['pension_etf_id'], ['pension_etf.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pension_etf_contribution_history_id'), 'pension_etf_contribution_history', ['id'], unique=False)
    op.create_table('pension_etf_contribution_plan_steps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pension_etf_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('frequency', sa.Enum('MONTHLY', 'QUARTERLY', 'SEMI_ANNUALLY', 'ANNUALLY', 'ONE_TIME', name='contributionfrequency'), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('note', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['pension_etf_id'], ['pension_etf.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pension_etf_contribution_plan_steps_id'), 'pension_etf_contribution_plan_steps', ['id'], unique=False)
    op.create_table('pension_insurance_benefits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pension_insurance_id', sa.Integer(), nullable=False),
    sa.Column('source', sa.String(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('frequency', sa.Enum('MONTHLY', 'QUARTERLY', 'SEMI_ANNUALLY', 'ANNUALLY', 'ONE_TIME', name='contributionfrequency'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('valid_from', sa.Date(), nullable=False),
    sa.Column('valid_until', sa.Date(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['pension_insurance_id'], ['pension_insurance.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pension_insurance_benefits_id'), 'pension_insurance_benefits', ['id'], unique=False)
    op.create_table('pension_insurance_contribution_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pension_insurance_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('is_manual', sa.Boolean(), nullable=False),
    sa.Column('note', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['pension_insurance_id'], ['pension_insurance.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pension_insurance_contribution_history_id'), 'pension_insurance_contribution_history', ['id'], unique=False)
    op.create_table('pension_insurance_contribution_plan_steps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pension_insurance_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('frequency', sa.Enum('MONTHLY', 'QUARTERLY', 'SEMI_ANNUALLY', 'ANNUALLY', 'ONE_TIME', name='contributionfrequency'), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('note', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['pension_insurance_id'], ['pension_insurance.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pension_insurance_contribution_plan_steps_id'), 'pension_insurance_contribution_plan_steps', ['id'], unique=False)
    op.create_table('pension_insurance_statements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pension_insurance_id', sa.Integer(), nullable=False),
    sa.Column('statement_date', sa.Date(), nullable=False),
    sa.Column('value', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('total_contributions', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('total_benefits', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('costs_amount', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('costs_percentage', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('note', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['pension_insurance_id'], ['pension_insurance.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pension_insurance_statements_id'), 'pension_insurance_statements', ['id'], unique=False)
    op.create_index(op.f('ix_pension_insurance_statements_statement_date'), 'pension_insurance_statements', ['statement_date'], unique=False)
    op.create_table('pension_state_statements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pension_id', sa.Integer(), nullable=False),
    sa.Column('statement_date', sa.Date(), nullable=False),
    sa.Column('current_value', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('current_monthly_amount', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('projected_monthly_amount', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('note', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['pension_id'], ['pension_state.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pension_state_statements_id'), 'pension_state_statements', ['id'], unique=False)
    op.create_index(op.f('ix_pension_state_statements_statement_date'), 'pension_state_statements', ['statement_date'], unique=False)
    op.create_table('pension_company_retirement_projections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('statement_id', sa.Integer(), nullable=False),
    sa.Column('retirement_age', sa.Integer(), nullable=False),
    sa.Column('monthly_payout', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('total_capital', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['statement_id'], ['pension_company_statements.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pension_company_retirement_projections_id'), 'pension_company_retirement_projections', ['id'], unique=False)
    op.create_index('ix_pension_company_retirement_projections_statement_id', 'pension_company_retirement_projections', ['statement_id'], unique=False)
    op.create_table('pension_insurance_projections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('statement_id', sa.Integer(), nullable=False),
    sa.Column('scenario_type', sa.String(), nullable=False),
    sa.Column('return_rate', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('value_at_retirement', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('monthly_payout', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['statement_id'], ['pension_insurance_statements.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pension_insurance_projections_id'), 'pension_insurance_projections', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_pension_insurance_projections_id'), table_name='pension_insurance_projections')
    op.drop_table('pension_insurance_projections')
    op.drop_index('ix_pension_company_retirement_projections_statement_id', table_name='pension_company_retirement_projections')
    op.drop_index(op.f('ix_pension_company_retirement_projections_id'), table_name='pension_company_retirement_projections')
    op.drop_table('pension_company_retirement_projections')
    op.drop_index(op.f('ix_pension_state_statements_statement_date'), table_name='pension_state_statements')
    op.drop_index(op.f('ix_pension_state_statements_id'), table_name='pension_state_statements')
    op.drop_table('pension_state_statements')
    op.drop_index(op.f('ix_pension_insurance_statements_statement_date'), table_name='pension_insurance_statements')
    op.drop_index(op.f('ix_pension_insurance_statements_id'), table_name='pension_insurance_statements')
    op.drop_table('pension_insurance_statements')
    op.drop_index(op.f('ix_pension_insurance_contribution_plan_steps_id'), table_name='pension_insurance_contribution_plan_steps')
    op.drop_table('pension_insurance_contribution_plan_steps')
    op.drop_index(op.f('ix_pension_insurance_contribution_history_id'), table_name='pension_insurance_contribution_history')
    op.drop_table('pension_insurance_contribution_history')
    op.drop_index(op.f('ix_pension_insurance_benefits_id'), table_name='pension_insurance_benefits')
    op.drop_table('pension_insurance_benefits')
    op.drop_index(op.f('ix_pension_etf_contribution_plan_steps_id'), table_name='pension_etf_contribution_plan_steps')
    op.drop_table('pension_etf_contribution_plan_steps')
    op.drop_index(op.f('ix_pension_etf_contribution_history_id'), table_name='pension_etf_contribution_history')
    op.drop_table('pension_etf_contribution_history')
    op.drop_index(op.f('ix_pension_company_statements_id'), table_name='pension_company_statements')
    op.drop_table('pension_company_statements')
    op.drop_index(op.f('ix_pension_company_contribution_plan_steps_id'), table_name='pension_company_contribution_plan_steps')
    op.drop_table('pension_company_contribution_plan_steps')
    op.drop_index(op.f('ix_pension_company_contribution_history_id'), table_name='pension_company_contribution_history')
    op.drop_table('pension_company_contribution_history')
    op.drop_index('ix_pension_state_member_name', table_name='pension_state')
    op.drop_index(op.f('ix_pension_state_member_id'), table_name='pension_state')
    op.drop_index(op.f('ix_pension_state_id'), table_name='pension_state')
    op.drop_table('pension_state')
    op.drop_index('ix_pension_insurance_member_provider_name', table_name='pension_insurance')
    op.drop_index(op.f('ix_pension_insurance_member_id'), table_name='pension_insurance')
    op.drop_index(op.f('ix_pension_insurance_id'), table_name='pension_insurance')
    op.drop_table('pension_insurance')
    op.drop_index(op.f('ix_pension_etf_member_id'), table_name='pension_etf')
    op.drop_index(op.f('ix_pension_etf_id'), table_name='pension_etf')
    op.drop_index(op.f('ix_pension_etf_etf_id'), table_name='pension_etf')
    op.drop_table('pension_etf')
    op.drop_index(op.f('ix_pension_company_member_id'), table_name='pension_company')
    op.drop_index(op.f('ix_pension_company_id'), table_name='pension_company')
    op.drop_index(op.f('ix_pension_company_employer'), table_name='pension_company')
    op.drop_table('pension_company')
    op.drop_index('ix_etf_updates_status_completed', table_name='etf_updates')
    op.drop_index('ix_etf_updates_etf_id_date', table_name='etf_updates')
    op.drop_table('etf_updates')
    op.drop_table('etf_prices')
    op.drop_index('ix_etf_errors_resolved', table_name='etf_errors')
    op.drop_table('etf_errors')
    op.drop_index(op.f('ix_task_status_id'), table_name='task_status')
    op.drop_table('task_status')
    op.drop_index(op.f('ix_settings_id'), table_name='settings')
    op.drop_table('settings')
    op.drop_index(op.f('ix_household_members_id'), table_name='household_members')
    op.drop_table('household_members')
    op.drop_index(op.f('ix_exchange_rates_id'), table_name='exchange_rates')
    op.drop_table('exchange_rates')
    op.drop_index('ix_exchange_rate_updates_status_completed', table_name='exchange_rate_updates')
    op.drop_table('exchange_rate_updates')
    op.drop_table('exchange_rate_errors')
    op.drop_index(op.f('ix_etfs_symbol'), table_name='etfs')
    op.drop_index(op.f('ix_etfs_id'), table_name='etfs')
    op.drop_table('etfs')
    op.drop_table('daily_update_tracking')
    # ### end Alembic commands ###
