"""add_status_to_company_pension

Revision ID: 196bff80076f
Revises: d723aa425c68
Create Date: 2025-03-01 14:02:20.318771

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import text


# revision identifiers, used by Alembic.
revision: str = '196bff80076f'
down_revision: Union[str, None] = 'd723aa425c68'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Check if the enum type exists before creating it
    conn = op.get_bind()
    result = conn.execute(text(
        "SELECT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'pensionstatus')"
    )).scalar()
    
    if not result:
        # Create the enum type if it doesn't exist
        op.execute("CREATE TYPE pensionstatus AS ENUM ('ACTIVE', 'PAUSED')")
    
    # Add the columns as nullable first
    op.add_column('pension_company', sa.Column('status', sa.Enum('ACTIVE', 'PAUSED', name='pensionstatus'), nullable=True))
    op.add_column('pension_company', sa.Column('paused_at', sa.Date(), nullable=True))
    op.add_column('pension_company', sa.Column('resume_at', sa.Date(), nullable=True))
    
    # Update existing records to set status to 'ACTIVE'
    op.execute("UPDATE pension_company SET status = 'ACTIVE'")
    
    # Now alter the column to be non-nullable
    op.alter_column('pension_company', 'status', nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('pension_company', 'resume_at')
    op.drop_column('pension_company', 'paused_at')
    op.drop_column('pension_company', 'status')
    # ### end Alembic commands ###
