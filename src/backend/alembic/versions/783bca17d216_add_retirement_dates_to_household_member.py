"""add retirement dates to household member

Revision ID: 783bca17d216
Revises: 6480c5b83b44
Create Date: 2025-02-24 13:59:42.680550

"""
from typing import Sequence, Union
from datetime import date
from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import table, column


# revision identifiers, used by Alembic.
revision: str = '783bca17d216'
down_revision: Union[str, None] = '6480c5b83b44'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Add columns as nullable first
    op.add_column('household_members', sa.Column('retirement_date_planned', sa.Date(), nullable=True))
    op.add_column('household_members', sa.Column('retirement_date_possible', sa.Date(), nullable=True))

    # Create a table representation for the update
    household_members = table('household_members',
        column('birthday', sa.Date),
        column('retirement_age_planned', sa.Integer),
        column('retirement_age_possible', sa.Integer),
        column('retirement_date_planned', sa.Date),
        column('retirement_date_possible', sa.Date)
    )

    # Update existing records
    op.execute(
        """
        UPDATE household_members 
        SET retirement_date_planned = make_date(
                EXTRACT(YEAR FROM birthday)::integer + retirement_age_planned,
                EXTRACT(MONTH FROM birthday)::integer,
                EXTRACT(DAY FROM birthday)::integer
            ),
            retirement_date_possible = make_date(
                EXTRACT(YEAR FROM birthday)::integer + retirement_age_possible,
                EXTRACT(MONTH FROM birthday)::integer,
                EXTRACT(DAY FROM birthday)::integer
            )
        """
    )

    # Now make the columns non-nullable
    op.alter_column('household_members', 'retirement_date_planned',
               existing_type=sa.Date(),
               nullable=False)
    op.alter_column('household_members', 'retirement_date_possible',
               existing_type=sa.Date(),
               nullable=False)


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('household_members', 'retirement_date_possible')
    op.drop_column('household_members', 'retirement_date_planned')
    # ### end Alembic commands ###
