"""Removing household relationship from householdmembers

Revision ID: 55b3076b27fd
Revises: 2740ff9ec2d7
Create Date: 2025-02-17 22:20:44.878885

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.engine.reflection import Inspector
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = '55b3076b27fd'
down_revision: Union[str, None] = '2740ff9ec2d7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # First handle the household_members table changes
    
    # Check if household_id column exists
    conn = op.get_bind()
    inspector = Inspector.from_engine(conn)
    columns = [col['name'] for col in inspector.get_columns('household_members')]
    
    if 'household_id' in columns:
        # Get foreign key constraints
        fks = inspector.get_foreign_keys('household_members')
        for fk in fks:
            if 'household_id' in fk['constrained_columns']:
                op.drop_constraint(fk['name'], 'household_members', type_='foreignkey')
        op.drop_column('household_members', 'household_id')

    # Create the enum type for contribution frequency
    contributionfrequency = postgresql.ENUM('MONTHLY', 'QUARTERLY', 'SEMI_ANNUALLY', 'ANNUALLY', 'ONE_TIME', name='contributionfrequency')
    contributionfrequency.create(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop the enum type
    op.execute('DROP TYPE contributionfrequency')

    # Restore household relationship
    op.add_column('household_members', sa.Column('household_id', sa.INTEGER(), nullable=False))
    op.create_foreign_key('household_members_household_id_fkey', 'household_members', 'households', ['household_id'], ['id'])
    # ### end Alembic commands ###
