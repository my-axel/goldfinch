---
description: 
globs: 
alwaysApply: true
---
# Instructions

During your interaction with the user, if you find anything reusable in this project (e.g. version of a library, model name), especially about a fix to a mistake you made or a correction you received, you should take note in the `Lessons` section in the `.devin.mdc` file so you will not make the same mistake again. 

You should also use the `SRATCHPAD.md` file as a Scratchpad to organize your thoughts. Especially when you receive a new task, you should first review the content of the Scratchpad, clear old different task if necessary, first explain the task, and plan the steps you need to take to complete the task. You can use todo markers to indicate the progress, e.g.
[X] Task 1
[ ] Task 2

Also update the progress of the task in the Scratchpad when you finish a subtask.
Especially when you finished a milestone, it will help to improve your depth of task accomplishment to use the Scratchpad to reflect and plan.
The goal is to help you maintain a big picture as well as the progress of the task. Always refer to the Scratchpad when you plan the next step.

# Lessons

## User Specified Lessons

- You have a python venv in src/backend/venv. Use it for backend tasks.
- Include info useful for debugging in the program output.
- Read the file before you try to edit it.
- For forms, use a parent page component with useData hook for data fetching, pass the data to a child form component that uses useForm with proper default values, wrap everything in ErrorBoundary and use LoadingState for loading states - never fetch or manage global state directly in form components.
- Always use `<EnumSelect<EnumType>>` instead of standard Select components when working with enum values in forms to ensure proper value handling during form resets and prevent empty field issues.


## Cursor learned

### Architecture


### Frontend


### Backend


### Development Process
